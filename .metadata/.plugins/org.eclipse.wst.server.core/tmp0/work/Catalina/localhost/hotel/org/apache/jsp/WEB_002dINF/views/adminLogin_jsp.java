/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.84
 * Generated at: 2023-12-26 02:50:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class adminLogin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/Users/anjaehun/Desktop/spaceF/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/HotelPJT/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/Users/anjaehun/Desktop/spaceF/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/HotelPJT/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1703085759101L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"ko\">\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("<title>admin login</title>\n");
      out.write("<style>\n");
      out.write("h1, h2, h3, h4 {\n");
      out.write("   margin-top: -5px;\n");
      out.write("   margin-bottom: 5px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("body {\n");
      out.write("   font-family: Circular, -apple-system, BlinkMacSystemFont, Roboto,\n");
      out.write("      Helvetica Neue, sans-serif;\n");
      out.write("   width: 100%;\n");
      out.write("   display: flex;\n");
      out.write("   margin: 200px auto;\n");
      out.write("   text-align: center;\n");
      out.write("   flex-flow: column;\n");
      out.write("   justify-content: center;\n");
      out.write("   align-items: center;\n");
      out.write("   background-color: #333;\n");
      out.write("}\n");
      out.write("\n");
      out.write("section {\n");
      out.write("   max-width: 1032px;\n");
      out.write("   height: 100%;\n");
      out.write("   text-align: center;\n");
      out.write("   padding-left: 24px;\n");
      out.write("   padding-right: 24px;\n");
      out.write("   border: 1px solid #717171;\n");
      out.write("   background-color: white;\n");
      out.write("   border-radius: 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("button {\n");
      out.write("   text-decoration: underline;\n");
      out.write("   font-weight: bold;\n");
      out.write("   cursor: pointer;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".account {\n");
      out.write("   font-size: 32px !important;\n");
      out.write("   font-weight: 600 !important;\n");
      out.write("   line-height: 36px !important;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".title {\n");
      out.write("   margin: 8px 0 16px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".title>span {\n");
      out.write("   font-size: 18px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".title>span>a {\n");
      out.write("   color: black;\n");
      out.write("   font-weight: bold;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".loginbox {\n");
      out.write("   padding: 10px 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write("input {\n");
      out.write("   border: 1px solid #717171;\n");
      out.write("}\n");
      out.write("\n");
      out.write("input[type=\"email\"], input[type=\"tel\"] {\n");
      out.write("   width: 400px;\n");
      out.write("   margin-bottom: 10px;\n");
      out.write("   height: 45px;\n");
      out.write("   padding-left: 8px;\n");
      out.write("   border-radius: 5px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("input[type=\"submit\"], button {\n");
      out.write("   width: 420px;\n");
      out.write("   background-color: #460479;\n");
      out.write("   color: white;\n");
      out.write("   height: 45px;\n");
      out.write("   border-radius: 8px;\n");
      out.write("   font-size: 15px;\n");
      out.write("   font-weight: bold;\n");
      out.write("   justify-content: center;\n");
      out.write("   opacity: 20%;\n");
      out.write("   text-decoration-line: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write("input[type=\"submit\"]:hover, button:hover {\n");
      out.write("   cursor: pointer;\n");
      out.write("   opacity: 100%;\n");
      out.write("   transition-duration: 0.2s;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".logo {\n");
      out.write("   cursor: pointer;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("   <section id=\"adminLoginform\">\n");
      out.write("      <div>\n");
      out.write("         <div style=\"margin: 20px 0px 40px 0;\">\n");
      out.write("            <img class=\"logo\" alt width=\"130\" height=\"114\" src=\"https://www.planit.jp/wp-content/uploads/2020/02/Transparent-Logo-300x261.png\">\n");
      out.write("            <div class=\"account\">Admin Login</div>\n");
      out.write("         </div>\n");
      out.write("      </div>\n");
      out.write("      <form style=\"width: 460px\" method=\"post\">\n");
      out.write("         <div class=\"loginbox\">\n");
      out.write("            <input type=\"text\" name=\"admin_id\" placeholder=\"ID\" />\n");
      out.write("            <input type=\"password\" name=\"password\" placeholder=\"PASSWORD\" />\n");
      out.write("            <div style=\"margin-top: 10px; margin-bottom: 10px;\"></div>\n");
      out.write("            <input type=\"submit\" id=\"b1\" value=\"Log In\" />\n");
      out.write("         </div>\n");
      out.write("      </form>\n");
      out.write("   </section>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
